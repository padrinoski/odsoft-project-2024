node {
    // Define environment variables
    def DOCKER_CREDENTIALS_ID = 'docker-hub-credentials'
    def DOCKER_IMAGE = 'books-c-image'
    def DOCKER_REGISTRY = 'docker.io/jazzmattaz'

    try {
        stage('Build') {
            // Build Docker image
            docker.build("${DOCKER_REGISTRY}/${DOCKER_IMAGE}:latest")
        }

        stage('Push') {
            // Push Docker image to registry
            docker.withRegistry("https://${DOCKER_REGISTRY}", "${DOCKER_CREDENTIALS_ID}") {
                docker.image("${DOCKER_REGISTRY}/${DOCKER_IMAGE}:latest").push()
            }
        }

        // Uncomment and modify the Deploy stage as needed
        // stage('Deploy') {
        //     // Deploy using Docker stack
        //     sh 'docker stack deploy -c ../../books-command.yml books-command'
        // }

        // Post actions
        currentBuild.result = 'SUCCESS'
    } catch (Exception e) {
        currentBuild.result = 'FAILURE'
        throw e
    } finally {
        // Always
        echo 'Cleaning up...'
        sh 'docker system prune -f'

        // Success
        // if (currentBuild.result == 'SUCCESS') {
        //     mail to: '1190640@isep.ipp.pt',
        //          subject: "Deployment Successful: ${env.JOB_NAME} [${env.BUILD_NUMBER}]",
        //          body: "The deployment of ${env.JOB_NAME} [${env.BUILD_NUMBER}] was successful."
        // }

        // Failure
        // if (currentBuild.result == 'FAILURE') {
        //     mail to: '1190640@isep.ipp.pt',
        //          subject: "Deployment Failed: ${env.JOB_NAME} [${env.BUILD_NUMBER}]",
        //          body: "The deployment of ${env.JOB_NAME} [${env.BUILD_NUMBER}] failed. Please check the Jenkins logs for more details."
        // }
    }
}