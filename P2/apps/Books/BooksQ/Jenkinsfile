node {
    def DOCKER_CREDENTIALS_ID = 'docker-hub-credentials'
    def DOCKER_IMAGE = 'books-q-image'
    def DOCKER_REGISTRY = 'docker.io/jazzmattaz'

    try {
        stage('Build') {
            docker.build("${DOCKER_REGISTRY}/${DOCKER_IMAGE}:latest")
        }

        stage('Push') {
            docker.withRegistry("https://${DOCKER_REGISTRY}", "${DOCKER_CREDENTIALS_ID}") {
                docker.image("${DOCKER_REGISTRY}/${DOCKER_IMAGE}:latest").push()
            }
        }

        // stage('Deploy') {
        //     sh 'docker stack deploy -c ../../books-query.yml books-query'
        // }

        stage('Test') {
            // Add your test steps here
        }

        currentBuild.result = 'SUCCESS'
    } catch (Exception e) {
        currentBuild.result = 'FAILURE'
        throw e
    } finally {
        stage('Cleanup') {
            echo 'Cleaning up...'
            sh 'docker system prune -f'
        }

        // if (currentBuild.result == 'SUCCESS') {
        //     mail to: '1190640@isep.ipp.pt',
        //          subject: "Deployment Successful: ${env.JOB_NAME} [${env.BUILD_NUMBER}]",
        //          body: "The deployment of ${env.JOB_NAME} [${env.BUILD_NUMBER}] was successful."
        // } else if (currentBuild.result == 'FAILURE') {
        //     mail to: '1190640@isep.ipp.pt',
        //          subject: "Deployment Failed: ${env.JOB_NAME} [${env.BUILD_NUMBER}]",
        //          body: "The deployment of ${env.JOB_NAME} [${env.BUILD_NUMBER}] failed. Please check the Jenkins logs for more details."
        // }
    }
}