node {
    def DOCKER_CREDENTIALS_ID = 'docker-hub-credentials'
    def DOCKER_IMAGE = 'populate-dbs-image'
    def DOCKER_REGISTRY = 'docker.io/jazzmattaz'
    def DOCKERFILE_PATH = 'bootstrapper'  // Update this path if Dockerfile is not in the root

    try {
        stage('Print Workspace') {
            echo "Current workspace directory: ${pwd()}"
            sh 'ls -la'
        }

        stage('Build') {
            echo "Building Docker image ${DOCKER_REGISTRY}/${DOCKER_IMAGE}:latest"
            def image = docker.build("${DOCKER_REGISTRY}/${DOCKER_IMAGE}:latest", "-f ${DOCKERFILE_PATH} .")
        }

        stage('Push') {
            echo "Pushing Docker image to ${DOCKER_REGISTRY}"
            docker.withRegistry("https://${DOCKER_REGISTRY}", DOCKER_CREDENTIALS_ID) {
                docker.image("${DOCKER_REGISTRY}/${DOCKER_IMAGE}:latest").push()
            }
        }

        // stage('Deploy') {
        //     echo "Deploying with Docker stack"
        //     sh 'docker stack deploy -c ../../docker-swarm/populate-databases.yml populate-databases'
        // }

        stage('Test') {
            echo "Running tests (to be implemented)"
            // Add your test logic here
        }

    } catch (Exception e) {
        currentBuild.result = 'FAILURE'
        echo "Build failed: ${e.message}"
        // mail to: '1190640@isep.ipp.pt',
        //      subject: "Deployment Failed: ${env.JOB_NAME} [${env.BUILD_NUMBER}]",
        //      body: "The deployment of ${env.JOB_NAME} [${env.BUILD_NUMBER}] failed. Error: ${e.message}. Please check the Jenkins logs for details."
        throw e
    } finally {
        stage('Cleanup') {
            echo 'Cleaning up Docker system'
            sh 'docker system prune -f'
        }
    }

    // if (currentBuild.result == 'SUCCESS') {
    //     mail to: '1190640@isep.ipp.pt',
    //          subject: "Deployment Successful: ${env.JOB_NAME} [${env.BUILD_NUMBER}]",
    //          body: "The deployment of ${env.JOB_NAME} [${env.BUILD_NUMBER}] was successful."
    // }
}